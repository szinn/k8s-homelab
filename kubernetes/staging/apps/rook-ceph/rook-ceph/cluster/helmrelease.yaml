---
# yaml-language-server: $schema=https://schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 1h
  timeout: 15m
  chartRef:
    kind: OCIRepository
    name: rook-ceph-cluster
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: snapshot-controller
      namespace: system
  values:
    toolbox:
      enabled: true

    monitoring:
      enabled: true
      createPrometheusRules: true

    cephClusterSpec:
      cephVersion:
        image: quay.io/ceph/ceph:v19.2.3@sha256:af0c5903e901e329adabe219dfc8d0c3efc1f05102a753902f33ee16c26b6cee

      cephConfig:
        global:
          bdev_enable_discard: "true" # quote
          bdev_async_discard_threads: "1" # quote
          osd_class_update_on_start: "false" # quote
          device_failure_prediction_mode: local # requires mgr module

      crashCollector:
        disable: false

      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false

    route:
      dashboard:
        host:
          name: rook.test.zinn.ca
          path: /
          pathType: PathPrefix
        parentRefs:
          - name: envoy-internal
            namespace: network
        rules:
          - backendRefs:
              - name: rook-ceph-mgr-dashboard
                namespace: rook-ceph
                port: 7000

      mgr:
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true

      # network:
      #   provider: host
      #   connections:
      #     requireMsgr2: true

      resources:
        mgr:
          requests:
            cpu: 125m
            memory: 549M
          limits:
            memory: 2Gi
        mon:
          requests:
            cpu: 50m
            memory: 512Mi
          limits:
            memory: 1Gi
        osd:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            memory: 2Gi
        mgr-sidecar:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 256Mi

      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "stage-1"
            devices:
              - name: "sdb"
          - name: "stage-2"
            devices:
              - name: "sdb"
          - name: "stage-3"
            devices:
              - name: "sdb"

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/fstype: ext4

    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete

    # NOTE: After disabling the filesystem, the filesystem can be removed with the following commands:
    # ceph fs fail ceph-filesystem && ceph fs rm ceph-filesystem --yes-i-really-mean-it
    cephFileSystems: []
      # - name: ceph-filesystem
      #   spec:
      #     metadataPool:
      #       replicated:
      #         size: 3
      #     dataPools:
      #       - failureDomain: host
      #         replicated:
      #           size: 3
      #     metadataServer:
      #       activeCount: 1
      #       activeStandby: true
      #   storageClass:
      #     enabled: true
      #     isDefault: false
      #     name: ceph-filesystem
      #     reclaimPolicy: Delete
      #     allowVolumeExpansion: true
      #     mountOptions: []
      #     parameters:
      #       csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
      #       csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
      #       csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
      #       csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
      #       csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
      #       csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
      #       csi.storage.k8s.io/fstype: ext4

    # cephFileSystemVolumeSnapshotClass:
    #   enabled: true
    #   name: csi-ceph-filesystem
    #   isDefault: false
    #   deletionPolicy: Delete

    cephObjectStores: []
