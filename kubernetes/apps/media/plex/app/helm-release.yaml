---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        secret.reloader.stakater.com/reload: *app
    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.32.0.6973-a787c5a8e@sha256:970a7f3226b6d9e3dcda12134647b465a4f14115c03d52751264d603a8f621e5
    env:
      TZ: "${CONFIG_TIMEZONE}"
      ADVERTISE_IP: "http://${CONFIG_SVC_PLEX_ADDR}:32400,https://{{ .Release.Name }}.${SECRET_DOMAIN_NAME}:443"
      ALLOWED_NETWORKS: "10.0.0.0/8"
      HOSTNAME: "plex"
    envFrom:
      - secretRef:
          name: *app
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: "${CONFIG_SVC_PLEX_ADDR}"
        externalIPs: ["${CONFIG_SVC_PLEX_ADDR}"]
        ports:
          http:
            port: 32400
            protocol: TCP
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          ingress.home.arpa/type: "internal"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN_NAME}"
            paths:
              - path: /
                pathType: Prefix
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 80Gi
        storageClass: ceph-block
    persistence:
      media:
        enabled: true
        type: nfs
        server: "${SECRET_ATLAS_NFS_SERVER}"
        path: /mnt/atlas/media/
        mountPath: /data
      backup:
        enabled: true
        type: nfs
        server: "${SECRET_ATLAS_NFS_SERVER}"
        path: "${SECRET_ATLAS_NFS_ROOTDIR}/backup/media/plex"
        mountPath: /backup
      transcode:
        enabled: true
        type: emptyDir
    nodeSelector:
      intel.feature.node.kubernetes.io/gpu: "true"
    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 100m
        memory: 2Gi
      limits:
        gpu.intel.com/i915: 1
        memory: 10Gi
