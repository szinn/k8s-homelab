---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: system
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: system
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/blakeblackshear/frigate
      tag: 0.12.1
    env:
      TZ: ${CONFIG_TIMEZONE}
      FRIGATE_MQTT_USERNAME:
        valueFrom:
          secretKeyRef:
            name: frigate-secret
            key: MOSQUITTO_USERNAME
      FRIGATE_MQTT_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: frigate-secret
            key: MOSQUITTO_PASSWORD
    envFrom:
      - secretRef:
          name: frigate-secret
    service:
      main:
        ports:
          http:
            port: &port 5000
          rtsp:
            enabled: true
            port: 8554
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          ingress.home.arpa/type: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN_NAME}"
            paths:
              - path: /
                pathType: Prefix
    securityContext:
      privileged: true
    volumeClaimTemplates:
      - name: config
        mountPath: /data
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: ceph-block
    persistence:
      config-file:
        enabled: true
        type: configMap
        name: frigate-configmap
        subPath: config.yaml
        mountPath: /config/config.yml
        readOnly: true
      media:
        enabled: true
        existingClaim: frigate-nfs
        mountPath: /media
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        mountPath: /dev/shm
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        mountPath: /dev/bus/usb
    nodeSelector:
      google.feature.node.kubernetes.io/coral: "true"
      intel.feature.node.kubernetes.io/gpu: "true"
    # affinity:
    #   podAntiAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       - labelSelector:
    #           matchExpressions:
    #             - key: app.kubernetes.io/name
    #               operator: In
    #               values: ["plex"]
    #         topologyKey: kubernetes.io/hostname
    resources:
      requests:
        cpu: 10m
        memory: 1000Mi
        gpu.intel.com/i915: "1"
      limits:
        memory: 6000Mi
        gpu.intel.com/i915: "1"
