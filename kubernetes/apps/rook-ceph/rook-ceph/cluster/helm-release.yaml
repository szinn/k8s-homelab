---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.11.5
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    toolbox:
      enabled: false
    monitoring:
      enabled: true
      createPrometheusRules: false
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      bluefs_buffered_io = false

    cephClusterSpec:
      cephVersion:
        # image: quay.io/ceph/ceph:v16.2.7
        image: quay.io/ceph/ceph:v17.2.6

      resources:
        mgr:
          requests:
            cpu: "125m"
            memory: "549M"
          limits:
            cpu: 2
            memory: "1485M"
        mon:
          requests:
            cpu: "49m"
            memory: "1165M"
          limits:
            memory: "3390M"
        osd:
          requests:
            cpu: "511m"
            memory: "4067M"
          limits:
            memory: "5944M"
        mgr-sidecar:
          requests:
            cpu: "49m"
            memory: "94M"
          limits:
            memory: "227M"
        crashcollector:
          requests:
            cpu: "15m"
            memory: "64M"
          limits:
            memory: "64M"
        logcollector:
          requests:
            cpu: "100m"
            memory: "100M"
          limits:
            memory: "1G"
        cleanup:
          requests:
            cpu: "250m"
            memory: "100M"
          limits:
            memory: "1G"

      crashCollector:
        disable: false

      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false

      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "k8s-4"
            devices:
              - name: "nvme0n1"
          - name: "k8s-5"
            devices:
              - name: "nvme0n1"
          - name: "k8s-6"
            devices:
              - name: "nvme0n1"

    ingress:
      dashboard:
        ingressClassName: "nginx"
        annotations:
          ingress.home.arpa/type: "internal"
        host:
          name: "rook.${SECRET_DOMAIN_NAME}"
          path: "/"

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
          metadataServer:
            activeCount: 1
            activeStandby: true
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephObjectStores: []
