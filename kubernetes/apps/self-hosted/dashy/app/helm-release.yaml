---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: dashy
  namespace: self-hosted
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        secret.reloader.stakater.com/reload: dashy-code-server
    image:
      repository: lissy93/dashy
      tag: 2.1.1
    env:
      TZ: ${CONFIG_TIMEZONE}
    service:
      main:
        ports:
          http:
            port: 80
    ingress:
      main:
        enabled: true
        annotations:
          ingress.home.arpa/type: "internal"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN_NAME}"
            paths:
              - path: /
                pathType: Prefix
    volumeClaimTemplates:
      - name: config
        mountPath: /app/public
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block
    addons:
      codeserver:
        enabled: true
        image:
          repository: codercom/code-server
          tag: 4.12.0
        workingDir: "/config"
        git:
          deployKeySecret: dashy-code-server
        args:
          - --auth
          - "none"
          - --user-data-dir
          - "/config/.vscode"
          - --extensions-dir
          - "/config/.vscode"
        ingress:
          enabled: true
          ingressClassName: "nginx"
          annotations:
            ingress.home.arpa/type: "internal"
          hosts:
            - host: "dashy-code.${SECRET_DOMAIN_NAME}"
              paths:
                - path: /
                  pathType: Prefix
        volumeMounts:
          - name: config
            mountPath: /config
