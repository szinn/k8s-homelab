---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name authentik-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: *name
    creationPolicy: Owner
    deletionPolicy: "Delete"
    template:
      engineVersion: v2
      data:
        AUTHENTIK_POSTGRESQL__HOST: &dbhost "postgres-rw.dbms"
        AUTHENTIK_POSTGRESQL__NAME: &dbname "authentik"
        AUTHENTIK_POSTGRESQL__USER: &dbuser "authentik"
        AUTHENTIK_POSTGRESQL__PASSWORD: &dbpass "{{ .authentik_POSTGRESQL_PASSWORD }}"
        AUTHENTIK_REDIS__DB: "1"

        AUTHENTIK_STORAGE__MEDIA__BACKEND: "s3"
        AUTHENTIK_STORAGE__MEDIA__S3__ACCESS_KEY: "{{ .authentik_AWS_ACCESS_KEY_ID }}"
        AUTHENTIK_STORAGE__MEDIA__S3__SECRET_KEY: "{{ .authentik_AWS_SECRET_ACCESS_KEY }}"
        AUTHENTIK_STORAGE__MEDIA__S3__BUCKET_NAME: "{{ .authentik_AWS_BUCKET_NAME }}"
        AUTHENTIK_STORAGE__MEDIA__S3__REGION: "{{ .authentik_AWS_REGION }}"
        AUTHENTIK_STORAGE__MEDIA__S3__ENDPOINT: "{{ .authentik_S3_ENDPOINT }}"
        AUTHENTIK_STORAGE__MEDIA__S3__CUSTOM_DOMAIN: "{{ .authentik_S3_CUSTOM_ENDPOINT }}"

        AUTHENTIK_BOOTSTRAP_EMAIL: "{{ .authentik_BOOTSTRAP_EMAIL }}"
        AUTHENTIK_BOOTSTRAP_PASSWORD: "{{ .authentik_BOOTSTRAP_PASSWORD }}"
        AUTHENTIK_BOOTSTRAP_TOKEN: "{{ .authentik_BOOTSTRAP_TOKEN }}"
        AUTHENTIK_SECRET_KEY: "{{ .authentik_SECRET_KEY }}"

        AUTHENTIK_EMAIL__HOST: "{{ .email_EMAIL_SMTP_HOST }}"
        AUTHENTIK_EMAIL__PORT: "{{ .email_EMAIL_SMTP_PORT }}"
        AUTHENTIK_EMAIL__USERNAME: "{{ .authentik_EMAIL_USER }}"
        AUTHENTIK_EMAIL__PASSWORD: "{{ .authentik_EMAIL_PASSWORD }}"
        AUTHENTIK_EMAIL__USE_TLS: "true"
        AUTHENTIK_EMAIL__FROM: "{{ .authentik_EMAIL_USER }}"

        INIT_POSTGRES_HOST: *dbhost
        INIT_POSTGRES_DBNAME: *dbname
        INIT_POSTGRES_USER: *dbuser
        INIT_POSTGRES_PASS: *dbpass
        INIT_POSTGRES_SUPER_USER: "{{ .cnpg_POSTGRES_SUPER_USER }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .cnpg_POSTGRES_SUPER_PASS }}"
  dataFrom:
    - extract:
        key: authentik
      rewrite:
        - regexp:
            source: "(.*)"
            target: "authentik_$1"
    - extract:
        key: cloudnative-pg-superuser
      rewrite:
        - regexp:
            source: "(.*)"
            target: "cnpg_$1"
    - extract:
        key: email-service
      rewrite:
        - regexp:
            source: "(.*)"
            target: "email_$1"
