---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app home-assistant
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: cloudnative-pg
      namespace: dbms
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: system
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3@sha256:8ba3204f6b293dd168766009aae2ce4fa986a29b931c2d30ac1b30238ac750b8
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: home-assistant-secret
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2024.9.3@sha256:2f3371405f9b20008520ebb0b30dc676924acfe04d7aaece282a1ee89c0d91ce
            envFrom:
              - secretRef:
                  name: home-assistant-secret
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.93.1@sha256:c69e398d1b64589b3b77a7becfd03f4ec524982def20e6bffbb51b1b839e72ba
            args:
              - --auth
              - none
              - --user-data-dir
              - "/config/.vscode"
              - --extensions-dir
              - "/config/.vscode"
              - --port
              - "8080"
              - "/config"
            env:
              TZ: "${CONFIG_TIMEZONE}"
    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: 8123
          code-server:
            port: 8080
    serviceMonitor:
      main:
        serviceName: home-assistant
        enabled: true
        endpoints:
          - port: http
            scheme: http
            path: /api/prometheus
            bearerTokenSecret:
              name: home-assistant-secret
              key: HASS_BEARER_TOKEN
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: "home.${SECRET_DOMAIN_NAME}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
      external:
        enabled: true
        className: external
        annotations:
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN_NAME}
          nginx.ingress.kubernetes.io/proxy-body-size: 1000M
          # nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-external.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          # nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start?rd=$escaped_request_uri
          # nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          # nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: "home.${SECRET_DOMAIN_NAME}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
      code-server:
        enabled: true
        className: internal
        hosts:
          - host: "ha-code.${SECRET_DOMAIN_NAME}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: code-server
    persistence:
      config:
        enabled: true
        existingClaim: "${VOLSYNC_CLAIM}"
        advancedMounts:
          main:
            main:
              - path: /config
            code-server:
              - path: /config
      sshkey:
        enabled: true
        type: secret
        name: home-assistant-secret
        items:
          - key: id_rsa
            path: id_rsa
        defaultMode: 256
        globalMounts:
          - path: /root/.ssh
            readOnly: true
