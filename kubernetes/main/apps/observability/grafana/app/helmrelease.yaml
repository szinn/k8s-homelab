---
# yaml-language-server: $schema=https://homelab-schemas-epg.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: grafana
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    deploymentStrategy:
      type: Recreate
    annotations:
      reloader.stakater.com/auto: "true"
    rbac:
      pspEnabled: false
    persistence:
      enabled: true
      storageClassName: ceph-block
    testFramework:
      enabled: false
    admin:
      existingSecret: grafana-secret
    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_SERVER_ROOT_URL: https://grafana.zinn.ca
    envFromSecrets:
      - name: grafana-secret
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth.anonymous:
        enabled: true
        org_id: 1
        org_name: Main Org.
        org_role: Viewer
      date_formats:
        use_browser_locale: true
        full_date: "MMM Do, YYYY hh:mm:ss a"
      explore:
        enabled: true
      grafana_net:
        url: https://grafana.net
      log:
        mode: console
        filters: rendering:debug
      news:
        news_feed_enabled: false
      panels:
        disable_sanitize_html: true
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      security:
        allow_embedding: true
        cookie_samesite: grafana
      server:
        root_url: https://grafana.zinn.ca
      users:
        auto_assign_org: true
        auto_assign_org_id: 1
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: "ceph"
            orgId: 1
            folder: "Ceph"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/ceph
          - name: "cilium"
            orgId: 1
            folder: "Cilium"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/cilium
          - name: "data"
            orgId: 1
            folder: "Data"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/data
          - name: "flux"
            orgId: 1
            folder: "Flux"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: "kubernetes"
            orgId: 1
            folder: "Kubernetes"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: "loki"
            orgId: 1
            folder: "Loki"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/loki
          - name: "system"
            orgId: 1
            folder: "System"
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/system
          - name: "unifi"
            orgId: 1
            folder: "Unifi"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/unifi
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
          - name: Prometheus
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://prometheus-operated.observability.svc.cluster.local:9090
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-headless.observability.svc.cluster.local:3100
            version: 1
            isDefault: false
            jsonData:
              maxLines: 200
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://prometheus-alertmanager.observability.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
          - name: Redis
            type: redis-datasource
            access: proxy
            url: redis://dragonfly.dbms.svc.cluster.local:6379
            jsonData:
              client: standalone
              poolSize: 5
              timeout: 10
              pingInterval: 0
              pipelineWindow: 0
            editable: true
    route:
      internal:
        enabled: true
        hostnames: ["grafana.zinn.ca"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    imageRenderer:
      enabled: true
      replicas: 2
      networkPolicy:
        limitIngress: false
      serviceMonitor:
        enabled: true
    plugins:
      - pr0ps-trackmap-panel
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - natel-plotly-panel
      - vonage-status-panel
      - https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-worldmap-panel-ng
      - redis-datasource
    serviceMonitor:
      enabled: true
    serviceAccount:
      autoMount: true
    sidecar:
      image:
        registry: ghcr.io
        repository: home-operations/k8s-sidecar
        tag: 1.30.7@sha256:3b6444d91c6e69a9e07c5e55419452d967d18c833d88b36277dc2021b708f621
      datasources:
        enabled: true
        searchNamespace: ALL
        initDatasources: true
        labelValue: ""
      dashboards:
        enabled: true
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        searchNamespace: ALL
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
    dashboards:
      ceph:
        ceph-cluster:
          # renovate: dashboardName="Ceph Cluster"
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        ceph-osd:
          # renovate: dashboardName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: dashboardName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus
      cilium:
        cilium-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.17.5/install/kubernetes/cilium/files/cilium-agent/dashboards/cilium-dashboard.json
          datasource: Prometheus
        cilium-operator-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.17.5/install/kubernetes/cilium/files/cilium-operator/dashboards/cilium-operator-dashboard.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        envoy:
          # renovate: dashboardNam="Envoy Proxy Monitoring gRPC"
          gnetId: 23239
          revision: 1
          datasource:
            - { name: DS_AFRANET_PROMETHEUS, value: Prometheus }
        # hubble-dashboard:
        #   url: https://raw.githubusercontent.com/cilium/cilium/v1.17.5/install/kubernetes/cilium/files/hubble/dashboards/hubble-dashboard.json
        #   datasource: Prometheus
      data:
        cloudnative-pg:
          url: https://raw.githubusercontent.com/cloudnative-pg/grafana-dashboards/main/charts/cluster/grafana-dashboard.json
          datasource: Prometheus
        redis-sentinel:
          # renovate: dashboardName="Redis"
          gnetId: 12776
          revision: 2
          datasource: Redis
        vernemq:
          # renovate: dashboardName="VerneMQ Cluster"
          gnetId: 23485
          revision: 2
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
      kubernetes:
        api-server:
          # renovate: dashboardName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
          datasource: Prometheus
        coredns:
          # renovate: dashboardName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 20
          datasource: Prometheus
        global:
          # renovate: dashboardName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        namespaces:
          # renovate: dashboardName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        nodes:
          # renovate: dashboardName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 37
          datasource: Prometheus
        pods:
          # renovate: dashboardName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: Prometheus
        volumes:
          # renovate: dashboardName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      loki:
        loki-metrics:
          # renovate: dashboardName="Loki2.0 Global Metrics"
          gnetId: 13407
          revision: 1
          datasource: Prometheus
      system:
        1-node-exporter:
          url: https://grafana.com/api/dashboards/11074/revisions/9/download
          datasource: Prometheus
        actions-runner-controller:
          # url: https://www.kenmuse.com/blog/enabling-github-arc-metrics/downloads/dashboard.json
          url: https://raw.githubusercontent.com/actions/actions-runner-controller/refs/heads/master/docs/gha-runner-scale-set-controller/samples/grafana-dashboard/ARC-Autoscaling-Runner-Set-Monitoring_1692627561838.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        cert-manager:
          # renovate: dashboardName="cert-manager"
          gnetId: 20340
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        cloudflared:
          # renovate: dashboardName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        external-dns:
          # renovate: dashboardName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        # external-secrets:
        #   url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
        #   datasource: Prometheus
        node-exporter-full:
          # renovate: dashboardName="Node Exporter Full"
          gnetId: 1860
          revision: 41
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        smartctl:
          # renovate: dashboardName="Dashboard for smartctl_exporter"
          gnetId: 20204
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        # ingress-nginx:
        #   url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/grafana/dashboards/nginx.json
        #   datasource: Prometheus
        # ingress-nginx-request-handling-performance:
        #   url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/grafana/dashboards/request-handling-performance.json
        #   datasource: Prometheus
        spegel:
          # renovate: dashboardName="Spegel"
          gnetId: 18089
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        volsync:
          # renovate: dashboardName="VolSync Dashboard"
          gnetId: 21356
          revision: 3
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
            - name: VAR_REPLICATIONDESTNAME
              value: ".*-bootstrap"
        zfs:
          # Ref: https://grafana.com/grafana/dashboards/7845
          gnetId: 7845
          revision: 4
          datasource: Prometheus
      unifi:
        # unifi-client-dpi:
        #   # renovate: dashboardName="UniFi-Poller: Client DPI - Prometheus"
        #   gnetId: 11310
        #   revision: 5
        #   datasource: Prometheus
        unifi-network-sites:
          # renovate: dashboardName="UniFi-Poller: Network Sites - Prometheus"
          gnetId: 11311
          revision: 5
          datasource: Prometheus
        unifi-usw-insights:
          # renovate: dashboardName="UniFi-Poller: USW Insights - Prometheus"
          gnetId: 11312
          revision: 9
          datasource: Prometheus
        unifi-uap-insights:
          # renovate: dashboardName="UniFi-Poller: UAP Insights - Prometheus"
          gnetId: 11314
          revision: 10
          datasource: Prometheus
        unifi-client-insights:
          # renovate: dashboardName="UniFi-Poller: Client Insights - Prometheus"
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        unifi-pdu-insights:
          # renovate: dashboardName="UniFi-Poller: PDU Insights - Prometheus"
          gnetId: 23027
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
