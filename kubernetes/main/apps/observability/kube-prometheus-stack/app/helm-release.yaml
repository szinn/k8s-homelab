---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kube-prometheus-stack
spec:
  interval: 5m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 58.5.3
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  valuesFrom:
    - kind: ConfigMap
      name: kube-state-metrics-config
      valuesKey: kube-state-metrics-config.yaml
  values:
    nameOverride: *app
    cleanPrometheusOperatorObjectNames: true

    alertmanager:
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - alerts.${SECRET_DOMAIN_NAME}
        path: /
        pathPrefix: Prefix
      alertmanagerSpec:
        replicas: 1
        alertmanagerConfiguration:
          name: cluster
          global:
            resolveTimeout: 5m
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: openebs-hostpath
              resources:
                requests:
                  storage: 1Gi

    grafana:
      enabled: false

    kubeApiServer:
      serviceMonitor:
        metricRelabelings:
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: apiserver_(response|watch_events)_sizes_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: apiserver_request_body_size_bytes_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: workqueue_(work|queue)_duration_seconds_bucket

    kubelet:
      serviceMonitor:
        cAdvisorMetricRelabelings:
          # Drop less useful container CPU metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)'
          # Drop less useful / always zero container memory metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_memory_(failures_total|mapped_file|swap)'
          # Drop less useful container process metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_(file_descriptors|tasks_state|threads_max)'
          # Drop less useful container filesystem metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)'
          # Drop less useful container blkio metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_blkio_device_usage_total'
          # Drop container spec metrics that overlap with kube-state-metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_spec.*'
          # Drop cgroup metrics with no pod.
          - sourceLabels: [id, pod]
            action: drop
            regex: '.+;'
          # Drop high-cardinality labels.
          - action: labeldrop
            regex: (uid|id|name|pod_uid|interface)
        probesMetricRelabelings:
          - action: drop
            sourceLabels: ["__name__"]
            regex: prober_probe_duration_seconds_bucket
        metricRelabelings:
          # Drop high-cardinality labels.
          - action: labeldrop
            regex: (uid|id|name|pod_uid|interface)
          - action: drop
            sourceLabels: ["__name__"]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)

    kubeControllerManager:
      enabled: true
      endpoints: &cp
        - 10.11.0.16
        - 10.11.0.17
        - 10.11.0.18
      serviceMonitor: &sm
        metricRelabelings:
          - action: drop
            sourceLabels: ["__name__"]
            regex: workqueue_(work|queue)_duration_seconds_bucket
    kubeEtcd:
      enabled: false
      endpoints: *cp
    kubeScheduler:
      endpoints: *cp
      serviceMonitor: *sm
    kubeProxy:
      enabled: false  # KubeProxy is disabled in the cluster, see Cilium/Talos configs

    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
            - action: replace
              regex: (.*)
              replacement: $1.${SECRET_TECH_DOMAIN_NAME}:9100
              sourceLabels:
                - kubernetes_node
              targetLabel: instance

    prometheusOperator:
      fullnameOverride: prometheus-operator

    prometheus:
      enabled: false  # Using VictoriaMetrics

  postRenderers:
    - kustomize:
        patches:
          - target:
              group: monitoring.coreos.com
              version: v1
              kind: ServiceMonitor
              name: kps-kubelet
            patch: |
              - op: add
                path: /spec/endpoints/0/trackTimestampsStaleness
                value: true
              - op: add
                path: /spec/endpoints/1/trackTimestampsStaleness
                value: true
              - op: add
                path: /spec/endpoints/2/trackTimestampsStaleness
                value: true
