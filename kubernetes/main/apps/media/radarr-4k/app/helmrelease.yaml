---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr-4k
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
        runAsNonRoot: true
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      radarr-4k:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app.kubernetes.io/name
                          operator: In
                          values:
                            - sabnzbd
                            - radarr-4k
                    topologyKey: kubernetes.io/hostname
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.22.0.9808@sha256:2bf6a9a5f30b28f09fa5601b23d095c64739ab0667753b95493a1bcdf194057d
            env:
              TZ: America/Toronto
              RADARR__APP__INSTANCENAME: Radarr-4k
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 7878
              RADARR__UPDATE__BRANCH: develop
            envFrom:
              - secretRef:
                  name: radarr-4k-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    service:
      app:
        controller: radarr-4k
        ports:
          http:
            port: &port 7878
    route:
      internal:
        hostnames: ["{{ .Release.Name }}.zinn.ca"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: app
                port: *port
    persistence:
      config:
        existingClaim: radarr-4k-config
      config-cache:
        existingClaim: radarr-4k-cache
        globalMounts:
          - path: /config/MediaCover
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      media:
        existingClaim: media-datastore
        globalMounts:
          - path: /media
      downloads:
        existingClaim: downloads
        globalMounts:
          - path: /downloads
      backup:
        existingClaim: media-backups
        globalMounts:
          - path: /config/Backups
            subPath: radarr-4k
      tmp:
        type: emptyDir
