---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: navidrome
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
        containers:
          main:
            image:
              repository: ghcr.io/navidrome/navidrome
              tag: 0.55.2@sha256:3a66e262b7ea836faa06c08ad5b32076c49e9e63e2fa4de10080c8e9be9f0846
            env:
              TZ: America/Toronto
              ND_AUTHREQUESTLIMIT: 0
              ND_DATAFOLDER: /config
              ND_ENABLEGRAVATAR: true
              ND_ENABLESHARING: true
              ND_LOGLEVEL: info
              ND_MUSICFOLDER: /media/Music
              ND_PORT: &port 8080
              ND_PROMETHEUS_ENABLED: true
              ND_REVERSEPROXYUSERHEADER: Remote-User
              ND_REVERSEPROXYWHITELIST: 10.0.0.0/8
              ND_SCANSCHEDULE: "@every 1h"
            envFrom:
              - secretRef:
                  name: navidrome-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
    service:
      main:
        controller: main
        ports:
          http:
            port: *port
    route:
      internal:
        hostnames: ["music.zinn.ca"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: main
                port: *port
    persistence:
      config:
        enabled: true
        existingClaim: "${VOLSYNC_CLAIM}"
        advancedMounts:
          main:
            main:
              - path: /config
      media:
        enabled: true
        existingClaim: media-datastore
        globalMounts:
          - path: /media
            readOnly: true
