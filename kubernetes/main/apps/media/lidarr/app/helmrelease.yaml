---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: lidarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      lidarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.4@sha256:1efd1019b3924d3bcff7ee581255813f17555a7413b8a3ff5b0b344a47632d6c
            envFrom: &envFrom
              - secretRef:
                  name: lidarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/lidarr
              tag: 2.10.1.4589@sha256:2f91db26a4563b6d5093757c9424c5930420b339341ba038fb563b68965e58a4
            env:
              TZ: America/Toronto
              LIDARR__APP__INSTANCENAME: Lidarr
              LIDARR__APP__THEME: dark
              LIDARR__AUTH__METHOD: External
              LIDARR__AUTH__REQUIRED: DisabledForLocalAddresses
              LIDARR__LOG__DBENABLED: "False"
              LIDARR__LOG_LEVEL: info
              LIDARR__SERVER__PORT: &port 8686
            envFrom:
              - secretRef:
                  name: lidarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    service:
      app:
        controller: lidarr
        ports:
          http:
            port: &port 8686
    route:
      internal:
        hostnames: ["{{ .Release.Name }}.zinn.ca"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: app
                port: *port
    persistence:
      config:
        existingClaim: lidarr-config
      tmp:
        type: emptyDir
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      media:
        existingClaim: media-datastore
        globalMounts:
          - path: /media
      downloads:
        existingClaim: downloads
        globalMounts:
          - path: /downloads
      backup:
        existingClaim: media-backups
        globalMounts:
          - path: /config/Backups
            subPath: lidarr
