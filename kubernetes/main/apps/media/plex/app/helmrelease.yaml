---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: google.feature.node.kubernetes.io/coral
                        operator: DoesNotExist
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
        containers:
          main:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.41.9.9961@sha256:6c86319bb3275135f5da5aec71b45e48305669ecbceee0f88d335bebf0d0f218
            env:
              TZ: "America/Toronto"
              ADVERTISE_IP: "http://10.11.1.14:32400,https://{{ .Release.Name }}.zinn.ca:443"
              ALLOWED_NETWORKS: "10.0.0.0/8"
              HOSTNAME: "plex"
            envFrom:
              - secretRef:
                  name: plex-secret
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 2Gi
              limits:
                gpu.intel.com/i915: 1
                memory: 10Gi
    service:
      main:
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: 10.11.1.14
        ports:
          http:
            port: 32400
            protocol: TCP
    route:
      internal:
        hostnames: ["{{ .Release.Name }}.zinn.ca"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs: [{}]
    persistence:
      config:
        enabled: true
        existingClaim: "${VOLSYNC_CLAIM}"
        advancedMounts:
          main:
            main:
              - path: /config
      media:
        type: nfs
        server: ragnar.zinn.tech
        path: /mnt/atlas/media/
        globalMounts:
          - path: /data
      backup:
        type: nfs
        server: ragnar.zinn.tech
        path: /mnt/atlas/k8s/main/backup/media/plex
        globalMounts:
          - path: /backup
      transcode:
        type: emptyDir
        globalMounts:
          - path: /transcode
      logs:
        type: emptyDir
        advancedMounts:
          main:
            main:
              - path: /config/Library/Application Support/Plex Media Server/Logs
      plex-cache:
        existingClaim: plex-cache
        advancedMounts:
          main:
            main:
              - path: /config/Library/Application Support/Plex Media Server/Cache
