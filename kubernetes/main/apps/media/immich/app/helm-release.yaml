---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      server:
        strategy: RollingUpdate
        annotations:
          secret.reloader.stakater.com/reload: immich-secret
          configmap.reloader.stakater.com/reload: immich-configmap
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.5@sha256:53fa938cfe6d2dae23b120145362341950f1154bf9d0e7f2ec4e471d61624f79
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: immich-secret
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.120.2@sha256:99f97cb61cd1b49c23fbee46a0ed067f171970518d8834c7e8b2dd3ac0d39c63
            envFrom:
              - secretRef:
                  name: immich-secret
              - configMapRef:
                  name: immich-configmap
      machine-learning:
        strategy: RollingUpdate
        annotations:
          secret.reloader.stakater.com/reload: immich-secret
          configmap.reloader.stakater.com/reload: immich-configmap
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.120.2@sha256:3cca923bc8eaa3616c48fc6088005e08d574cf1acf6c1253c92393ae11e4788d
            envFrom:
              - secretRef:
                  name: immich-secret
              - configMapRef:
                  name: immich-configmap
      redis:
        containers:
          main:
            image:
              repository: public.ecr.aws/docker/library/redis
              tag: 7.4.1@sha256:af0be38eb8e43191bae9b03fe5c928803930b6f93e2dde3a7ad1165c04b1ce22
            env:
              REDIS_REPLICATION_MODE: master
            command: ["redis-server"]

    service:
      server:
        controller: server
        ports:
          http:
            port: 2283
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      redis:
        controller: redis
        ports:
          http:
            port: 6379

    ingress:
      main:
        enabled: true
        className: external-nginx
        annotations:
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN_NAME}
        hosts:
          - host: photos.${SECRET_DOMAIN_NAME}
            paths:
              - path: /
                service:
                  identifier: server
                  port: http

    persistence:
      library:
        existingClaim: immich-nfs
        advancedMounts:
          server:
            main:
              - path: /usr/src/app/upload
      geocoding-dump:
        type: emptyDir
        advancedMounts:
          server:
            main:
              - path: /usr/src/app/.reverse-geocoding-dump
      transformers-cache:
        type: emptyDir
        advancedMounts:
          server:
            main:
              - path: /usr/src/app/.transformers_cache
      model-cache:
        type: emptyDir
        advancedMounts:
          machine-learning:
            main:
              - path: /cache
