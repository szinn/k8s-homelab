---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: loki
spec:
  chart:
    spec:
      chart: loki
      version: 6.1.0
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 15m
  interval: 30m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    deploymentMode: SimpleScalable
    loki:
      podAnnotations:
        secret.reloader.stakater.com/reload: loki-secret
      ingester:
        chunk_encoding: snappy
      storage:
        bucketNames:
          chunks: loki-chunks
          ruler: loki-ruler
          admin: loki-admin
        type: s3
        s3:
          s3ForcePathStyle: true
          insecure: true
      schemaConfig:
        configs:
          - from: "2024-04-01"
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      structuredConfig:
        auth_enabled: false
        server:
          log_level: debug
          http_listen_port: 3100
          grpc_listen_port: 9095
          grpc_server_max_recv_msg_size: 8388608
          grpc_server_max_send_msg_size: 8388608
        limits_config:
          ingestion_burst_size_mb: 128
          ingestion_rate_mb: 64
          max_query_parallelism: 100
          per_stream_rate_limit: 64M
          per_stream_rate_limit_burst: 128M
          reject_old_samples: true
          reject_old_samples_max_age: 168h
          retention_period: 30d
          shard_streams:
            enabled: true
          split_queries_by_interval: 1h
        query_scheduler:
          max_outstanding_requests_per_tenant: 4096
        frontend:
          max_outstanding_per_tenant: 4096
        ruler:
          enable_api: true
          enable_alertmanager_v2: true
          alertmanager_url: http://alertmanager-operated:9093
          storage:
            type: local
            local:
              directory: /rules
          rule_path: /rules
        analytics:
          reporting_enabled: false
    gateway:
      enabled: true
      replicas: 3
      image:
        registry: ghcr.io
        repository: nginxinc/nginx-unprivileged
        tag: 1.25-alpine@sha256:5b49ce26ad8555b649a5a5ea8ccdfabc742a284ab58cb7b7d7a56f178c5dd351
      deploymentStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 50%
          maxSurge: 50%
      topologySpreadConstraints:
        - maxSkew: 2
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: loki
              app.kubernetes.io/component: gateway
      service:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${CONFIG_MAIN_SVC_LOKI_ADDR}
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8
        hosts:
          - host: &host "loki.${SECRET_DOMAIN_NAME}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    write:
      replicas: 3
      persistence:
        storageClass: openebs-hostpath
        size: 20Gi
    read:
      replicas: 3
    backend:
      replicas: 3
      persistence:
        storageClass: openebs-hostpath
        size: 20Gi
    monitoring:
      dashboards:
        annotations:
          grafana_folder: Loki
      rules:
        enabled: false
      serviceMonitor:
        enabled: false
        metricsInstance:
          enabled: false
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false
    lokiCanary:
      enabled: false
    test:
      enabled: false
  valuesFrom:
    - kind: Secret
      name: loki-secret
      valuesKey: BUCKET_HOST
      targetPath: loki.storage.s3.endpoint
    - kind: Secret
      name: loki-secret
      valuesKey: AWS_REGION
      targetPath: loki.storage.s3.region
    - kind: Secret
      name: loki-secret
      valuesKey: AWS_ACCESS_KEY_ID
      targetPath: loki.storage.s3.accessKeyId
    - kind: Secret
      name: loki-secret
      valuesKey: AWS_SECRET_ACCESS_KEY
      targetPath: loki.storage.s3.secretAccessKey
