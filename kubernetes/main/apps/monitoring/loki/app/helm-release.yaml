---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  chart:
    spec:
      chart: loki
      version: 5.42.2
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 15m
  interval: 30m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    loki:
      structuredConfig:
        auth_enabled: false
        server:
          log_level: info
          http_listen_port: 3100
          grpc_listen_port: 9095
        memberlist:
          join_members: ["loki-memberlist"]
        limits_config:
          retention_period: 30d
          enforce_metric_name: false
          reject_old_samples: true
          reject_old_samples_max_age: 168h
          max_cache_freshness_per_query: 10m
          split_queries_by_interval: 1h
          max_query_parallelism: 100
          ingestion_rate_mb: 8
          ingestion_burst_size_mb: 16
        query_scheduler:
          max_outstanding_requests_per_tenant: 4096
        frontend:
          max_outstanding_per_tenant: 4096
        schema_config:
          configs:
            - from: "2021-08-01"
              store: boltdb-shipper
              object_store: s3
              schema: v11
              index:
                prefix: loki_index_
                period: 24h
        common:
          path_prefix: /var/loki
          replication_factor: 3
          storage:
            s3:
              bucketnames: loki
              insecure: true
              s3forcepathstyle: true
          ring:
            kvstore:
              store: memberlist
        ruler:
          enable_api: true
          enable_alertmanager_v2: true
          alertmanager_url: http://alertmanager-operated:9093
          storage:
            type: local
            local:
              directory: /rules
          rule_path: /tmp/scratch
          ring:
            kvstore:
              store: memberlist
        distributor:
          ring:
            kvstore:
              store: memberlist
        compactor:
          working_directory: /var/loki/boltdb-shipper-compactor
          shared_store: s3
          compaction_interval: 10m
          retention_enabled: true
          retention_delete_delay: 2h
          retention_delete_worker_count: 150
        ingester:
          max_chunk_age: 1h
          lifecycler:
            ring:
              kvstore:
                store: memberlist
        analytics:
          reporting_enabled: false
    gateway:
      affinity: |
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.gatewaySelectorLabels" . | nindent 12 }}
                topologyKey: kubernetes.io/hostname
      enabled: true
      image:
        registry: ghcr.io
        repository: nginxinc/nginx-unprivileged
        tag: 1.25.3-alpine
      replicas: 3
      verboseLogging: false
      deploymentStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 2
          maxSurge: 0
      service:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${CONFIG_MAIN_SVC_LOKI_ADDR}
      ingress:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          ingress.home.arpa/type: "internal"
        hosts:
          - host: &host "loki.${SECRET_DOMAIN_NAME}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    write:
      replicas: 3
      affinity: |
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.writeSelectorLabels" . | nindent 12 }}
                topologyKey: kubernetes.io/hostname
      persistence:
        size: 20Gi
        storageClass: local-hostpath
    read:
      replicas: 3
      affinity: |
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.readSelectorLabels" . | nindent 12 }}
                topologyKey: kubernetes.io/hostname
      extraVolumeMounts:
        - name: rules
          mountPath: /rules
      extraVolumes:
        - name: rules
          emptyDir: {}
    backend:
      replicas: 3
      affinity: |
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "loki.backendSelectorLabels" . | nindent 12 }}
                topologyKey: kubernetes.io/hostname
      persistence:
        size: 20Gi
        storageClass: local-hostpath
    monitoring:
      dashboards:
        enabled: true
        annotations:
          kustomize.toolkit.fluxcd.io/substitute: disabled
          grafana_folder: Loki
        labels:
          grafana_dashboard: "true"
      rules:
        enabled: true
        alerting: true
      serviceMonitor:
        enabled: false
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false
      lokiCanary:
        enabled: false
    test:
      enabled: false
  valuesFrom:
    - targetPath: loki.structuredConfig.common.storage.s3.region
      kind: Secret
      name: loki-secrets
      valuesKey: AWS_REGION
    - targetPath: loki.structuredConfig.common.storage.s3.endpoint
      kind: Secret
      name: loki-secrets
      valuesKey: BUCKET_HOST
    - targetPath: loki.structuredConfig.common.storage.s3.access_key_id
      kind: Secret
      name: loki-secrets
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: loki.structuredConfig.common.storage.s3.secret_access_key
      kind: Secret
      name: loki-secrets
      valuesKey: AWS_SECRET_ACCESS_KEY
