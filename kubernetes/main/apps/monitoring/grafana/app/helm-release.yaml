---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 7.3.7
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-init:16.2
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: grafana-secret
    deploymentStrategy:
      type: Recreate
    annotations:
      reloader.stakater.com/auto: "true"
    rbac:
      pspEnabled: false
    persistence:
      enabled: false
    testFramework:
      enabled: false
    admin:
      existingSecret: grafana-secret
      userKey: adminUser
      passwordKey: adminPassword
    env:
      GF_AUTH_GENERIC_OAUTH_API_URL: https://auth.${SECRET_DOMAIN_NAME}/api/oidc/userinfo
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://auth.${SECRET_DOMAIN_NAME}/api/oidc/authorization
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://auth.${SECRET_DOMAIN_NAME}/api/oidc/token
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
    envFromSecrets:
      - name: grafana-secret
    grafana.ini:
      # default:
      #   force_migration: true
      auth:
        # signout_redirect_url: https://auth.${SECRET_DOMAIN_NAME}/logout
        oauth_auto_login: true
        oauth_allow_insecure_email_lookup: true
      auth.generic_oauth:
        enabled: true
        name: Authelia
        icon: signin
        client_id: grafana
        scopes: "openid profile email groups"
        empty_scopes: false
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        use_pkce: true
      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains(groups[*], 'admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'
        org_id: 1
      auth.basic:
        enabled: false
      auth.anonymous:
        enabled: true
        org_id: 1
        org_role: Viewer
      date_formats:
        use_browser_locale: true
        full_date: "MMM Do, YYYY hh:mm:ss a"
      explore:
        enabled: true
      grafana_net:
        url: https://grafana.net
      log:
        mode: console
        filters: rendering:debug
      news:
        news_feed_enabled: false
      panels:
        disable_sanitize_html: true
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      security:
        allow_embedding: true
        cookie_samesite: grafana
      server:
        root_url: https://grafana.${SECRET_DOMAIN_NAME}
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: "ceph"
            orgId: 1
            folder: "Ceph"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/ceph
          - name: "cilium"
            orgId: 1
            folder: "Cilium"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/cilium
          - name: "data"
            orgId: 1
            folder: "Data"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/data
          - name: "flux"
            orgId: 1
            folder: "Flux"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: "kubernetes"
            orgId: 1
            folder: "Kubernetes"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: "loki"
            orgId: 1
            folder: "Loki"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/loki
          - name: "system"
            orgId: 1
            folder: "System"
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/system
          - name: "teslamate`"
            orgId: 1
            folder: "Teslamate"
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/teslamate
          - name: "thanos`"
            orgId: 1
            folder: "Thanos"
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/thanos
          - name: "unifi"
            orgId: 1
            folder: "Unifi"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/unifi
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring.svc.cluster.local:9090/
            isDefault: false
            jsonData:
              prometheusType: Thanos
              timeInterval: 1m
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local
            version: 1
            isDefault: true
            jsonData:
              maxLines: 100
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://prometheus-alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
          - name: TeslaMate
            type: postgres
            access: proxy
            url: postgres-ro.dbms.svc.cluster.local:5432
            database: teslamate
            user: teslamate
            secureJsonData:
              password: "$TESLAMATE_POSTGRES_PASSWORD"
            basicAuth: false
            withCredentials: false
            jsonData:
              postgresVersion: 1000
              sslmode: disable
            version: 1
            editable: true
          - name: TeslaSpy
            type: postgres
            access: proxy
            url: postgres-ro.dbms.svc.cluster.local:5432
            database: teslaspy
            user: teslaspy
            secureJsonData:
              password: "$TESLASPY_POSTGRES_PASSWORD"
            basicAuth: false
            withCredentials: false
            jsonData:
              postgresVersion: 1000
              sslmode: disable
            version: 1
            editable: true
          - name: Redis
            type: redis-datasource
            access: proxy
            url: redis://dragonfly.dbms.svc.cluster.local:6379
            jsonData:
              client: standalone
              poolSize: 5
              timeout: 10
              pingInterval: 0
              pipelineWindow: 0
            editable: true
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        ingress.home.arpa/type: "internal"
      hosts:
        - "grafana.${SECRET_DOMAIN_NAME}"
      path: /
      pathType: Prefix
    imageRenderer:
      enabled: true
      replicas: 2
      networkPolicy:
        limitIngress: false
      serviceMonitor:
        enabled: true
    plugins:
      - pr0ps-trackmap-panel
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - natel-plotly-panel
      - vonage-status-panel
      - https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-worldmap-panel-ng
      - redis-datasource
    serviceMonitor:
      enabled: true
    serviceAccount:
      autoMount: true
    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        initDatasources: true
        labelValue: ""
      dashboards:
        enabled: true
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        searchNamespace: ALL
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
    dashboards:
      ceph:
        ceph-cluster:
          # renovate: depName="Ceph Cluster"
          gnetId: 2842
          revision: 17
          datasource: Prometheus
        ceph-osd:
          # renovate: depName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: depName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus
      cilium:
        cilium-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.15.2/examples/kubernetes/main/addons/prometheus/files/grafana-dashboards/cilium-dashboard.json
          datasource: Prometheus
        cilium-operator-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.15.2/examples/kubernetes/main/addons/prometheus/files/grafana-dashboards/cilium-operator-dashboard.json
          datasource: Prometheus
        hubble-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.15.2/examples/kubernetes/main/addons/prometheus/files/grafana-dashboards/hubble-dashboard.json
          datasource: Prometheus
      data:
        cloudnative-pg:
          url: https://github.com/cloudnative-pg/charts/blob/main/charts/cloudnative-pg/monitoring/grafana-dashboard.json
          datasource: Prometheus
        dragonfly:
          url: https://raw.githubusercontent.com/dragonflydb/dragonfly/main/tools/local/monitoring/grafana/provisioning/dashboards/dashboard.json
          datasource: Prometheus
        redis:
          # renovate: depName="Redis Exporter Quickstart and Dashboard"
          gnetId: 14091
          revision: 1
          datasource: Prometheus
        redis-sentinel:
          # renovate: depName="Redis"
          gnetId: 12776
          revision: 2
          datasource: Redis
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v2.2.3/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v2.2.3/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v2.2.3/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
      kubernetes:
        api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 14
          datasource: Prometheus
        coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 13
          datasource: Prometheus
        global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 37
          datasource: Prometheus
        namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 27
          datasource: Prometheus
        nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 19
          datasource: Prometheus
        pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      loki:
        loki-metrics:
          # renovate: depName="Loki2.0 Global Metrics"
          gnetId: 13407
          revision: 1
          datasource: Prometheus
      system:
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        speedtest-exporter-hub:
          # renovate: depName="Speedtest-Exporter Dashboard"
          gnetId: 13665
          revision: 4
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        1-node-exporter:
          url: https://grafana.com/api/dashboards/11074/revisions/9/download
          datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457 # https://grafana.com/grafana/dashboards/17457?tab=revisions
          revision: 6
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 30
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        # cert-manager:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
        #   datasource: Prometheus
        ingress-nginx:
          url: https://raw.githubusercontent.com/kubernetes/main/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        ingress-nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/main/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/7845
        zfs:
          # renovate: depName="ZFS"
          gnetId: 7845
          revision: 4
          datasource: Prometheus
      teslamate:
        battery-health:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/battery-health.json
          datasource: TeslaMate
        charge-level:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/charge-level.json
          datasource: TeslaMate
        charges:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/charges.json
          datasource: TeslaMate
        charging-stats:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/charging-stats.json
          datasource: TeslaMate
        drive-stats:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/drive-stats.json
          datasource: TeslaMate
        drives:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/drives.json
          datasource: TeslaMate
        efficiency:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/efficiency.json
          datasource: TeslaMate
        locations:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/locations.json
          datasource: TeslaMate
        milage:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/mileage.json
          datasource: TeslaMate
        overview:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/overview.json
          datasource: TeslaMate
        projected-range:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/projected-range.json
          datasource: TeslaMate
        states:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/states.json
          datasource: TeslaMate
        statistics:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/statistics.json
          datasource: TeslaMate
        timeline:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/timeline.json
          datasource: TeslaMate
        trip:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/trip.json
          datasource: TeslaMate
        updates:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/updates.json
          datasource: TeslaMate
        vampire-drain:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/vampire-drain.json
          datasource: TeslaMate
        visited:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/visited.json
          datasource: TeslaMate
      thanos:
        thanos-bucket-replicate-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
          datasource: Prometheus
        thanos-compact-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
          datasource: Prometheus
        thanos-overview-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
          datasource: Prometheus
        thanos-query-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
          datasource: Prometheus
        thanos-query-frontend-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
          datasource: Prometheus
        thanos-receive-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
          datasource: Prometheus
        thanos-rule-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
          datasource: Prometheus
        thanos-sidecar-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
          datasource: Prometheus
        thanos-store-dashboard:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
          datasource: Prometheus
      unifi:
        unifi-client-insights:
          # renovate: depName="UniFi-Poller: Client Insights - Prometheus"
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        unifi-network-sites:
          # renovate: depName="UniFi-Poller: Network Sites - Prometheus"
          gnetId: 11311
          revision: 5
          datasource: Prometheus
        unifi-uap-insights:
          # renovate: depName="UniFi-Poller: UAP Insights - Prometheus"
          gnetId: 11314
          revision: 10
          datasource: Prometheus
        unifi-usw-insights:
          # renovate: depName="UniFi-Poller: USW Insights - Prometheus"
          gnetId: 11312
          revision: 9
          datasource: Prometheus
