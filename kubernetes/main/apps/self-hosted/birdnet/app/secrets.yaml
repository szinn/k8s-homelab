---
# yaml-language-server: $schema=https://homelab-schemas-epg.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name birdnet-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: *name
    template:
      engineVersion: v2
      data:
        config.yaml: |
          debug: false
          main:
              name: BirdNET-Go
              timeas24h: true
              log:
                  enabled: true
                  path: birdnet.log
                  rotation: daily
                  maxsize: 1048576
                  rotationday: Sunday
          birdnet:
              sensitivity: 1
              threshold: 0.7
              overlap: 1.5
              longitude: "{{ .hass_HASS_SECRET_LONGITUDE }}"
              latitude: "{{ .hass_HASS_SECRET_LATITUDE }}"
              threads: 0
              locale: en
              rangefilter:
                  model: latest
                  threshold: 0.01
              modelpath: ""
              labelpath: ""
              usexnnpack: false
          realtime:
              interval: 15
              processingtime: false
              audio:
                  source: sysdefault
                  ffmpegpath: ffmpeg
                  soxpath: sox
                  export:
                      debug: false
                      enabled: true
                      path: clips/
                      type: wav
                      bitrate: 96k
                      retention:
                          debug: false
                          policy: usage
                          maxage: 30d
                          maxusage: 80%
                          minclips: 10
                  equalizer:
                      enabled: false
                      filters:
                          - type: HighPass
                            frequency: 100
                            q: 0
                            gain: 0
                            width: 0
                            passes: 0
                          - type: LowPass
                            frequency: 15000
                            q: 0
                            gain: 0
                            width: 0
                            passes: 0
              dashboard:
                  thumbnails:
                      debug: false
                      summary: true
                      recent: true
                  summarylimit: 30
              dynamicthreshold:
                  enabled: true
                  debug: false
                  trigger: 0.9
                  min: 0.2
                  validhours: 24
              log:
                  enabled: true
                  path: birdnet.txt
              birdweather:
                  enabled: false
                  debug: false
                  id: ""
                  threshold: 0.8
                  locationaccuracy: 500
              openweather:
                  enabled: false
                  debug: false
                  apikey: ""
                  endpoint: https://api.openweathermap.org/data/2.5/weather
                  interval: 60
                  units: metric
                  language: en
              privacyfilter:
                  debug: false
                  enabled: true
                  confidence: 0.05
              dogbarkfilter:
                  debug: false
                  enabled: true
                  confidence: 0.1
                  remember: 5
                  species: []
              rtsp:
                  transport: tcp
                  urls:
                      - "{{ .birdnet_BACKDOOR_CAMERA }}"
              mqtt:
                  enabled: true
                  broker: tcp://emqx-listeners.dbms.svc.cluster.local:1883
                  topic: birdnet
                  username: "{{ .emqx_X_EMQX_MQTT_USERNAME }}"
                  password: "{{ .emqx_X_EMQX_MQTT_PASSWORD }}"
              telemetry:
                  enabled: true
                  listen: 0.0.0.0:8090
              species:
                  threshold: {}
                  actions: {}
                  include: []
                  exclude: []
          webserver:
              enabled: true
              port: "8080"
              log:
                  enabled: false
                  path: webui.log
                  rotation: daily
                  maxsize: 1048576
                  rotationday: "0"
          security:
              host: "https://birdnet.zinn.ca"
              autotls: false
              redirecttohttps: false
              allowsubnetbypass:
                  enabled: false
                  subnet: ""
              allowcloudflarebypass:
                  enabled: false
                  teamdomain: ""
                  audience: ""
              basicauth:
                  enabled: false
                  password: ""
                  clientid: ""
                  clientsecret: "{{ .birdnet_BASIC_AUTH_CLIENT_SECRET }}"
                  redirecturi: ""
                  authcodeexp: 10m0s
                  accesstokenexp: 1h0m0s
              googleauth:
                  enabled: false
                  clientid: ""
                  clientsecret: ""
                  redirecturi: /settings
                  userid: ""
              githubauth:
                  enabled: false
                  clientid: ""
                  clientsecret: ""
                  redirecturi: /settings
                  userid: ""
              sessionsecret: ""
          output:
              file: {}
              sqlite:
                  enabled: true
                  path: birdnet.db
              mysql:
                  enabled: false
                  username: birdnet
                  password: secret
                  database: birdnet
                  host: localhost
                  port: "3306"

  dataFrom:
    - extract:
        key: emqx
      rewrite:
        - regexp:
            source: "(.*)"
            target: "emqx_$1"
    - extract:
        key: birdnet
      rewrite:
        - regexp:
            source: "(.*)"
            target: "birdnet_$1"
    - extract:
        key: home-assistant
      rewrite:
        - regexp:
            source: "(.*)"
            target: "hass_$1"
