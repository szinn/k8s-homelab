---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.rook.io/release
      chart: rook-ceph-cluster
      version: v1.9.0
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  dependsOn:
    - name: rook-ceph
  values:
    toolbox:
      enabled: false

    monitoring:
      enabled: true

    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true

    cephClusterSpec:
      mgr:
        count: 2
      mon:
        count: 3
      healthCheck:
        livenessProbe:
          mon:
            probe:
              timeoutSeconds: 5
          mgr:
            probe:
              timeoutSeconds: 5
          osd:
            probe:
              timeoutSeconds: 5
        startupProbe:
          mon:
            probe:
              timeoutSeconds: 5
          mgr:
            probe:
              timeoutSeconds: 5
          osd:
            probe:
              timeoutSeconds: 5

      dashboard:
        enabled: true
        urlPrefix: /

      resources:
        mgr:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        mon:
          limits:
            cpu: "1"
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        osd:
          limits:
            cpu: "1"
            memory: "4Gi"
          requests:
            cpu: "1"
            memory: "4Gi"
        prepareosd:
          limits:
            memory: "200Mi"
          requests:
            memory: "50Mi"
        mgr-sidecar:
          limits:
            memory: "100Mi"
          requests:
            memory: "40Mi"
        crashcollector:
          limits:
            cpu: "500m"
            memory: "60Mi"
          requests:
            cpu: "500m"
            memory: "60Mi"
        logcollector:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "100Mi"
        cleanup:
          limits:
            memory: "1Gi"
          requests:
            memory: "100Mi"

      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "k8s-4"
            devices:
              - name: "nvme0n1"
          - name: "k8s-5"
            devices:
              - name: "nvme0n1"
          - name: "k8s-6"
            devices:
              - name: "nvme0n1"

    ingress:
      dashboard:
        annotations:
          kubernetes.io/ingress.class: "traefik"
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: ${CONFIG_CERTIFICATE_ISSUER}
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: traefik-system-internal@kubernetescrd
        host:
          name: "rook.${SECRET_DOMAIN_NAME}"
          path: "/"
        tls:
          - secretName: rook-tls
            hosts:
              - "rook.${SECRET_DOMAIN_NAME}"

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
          metadataServer:
            activeCount: 1
            activeStandby: true
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephObjectStores: []
