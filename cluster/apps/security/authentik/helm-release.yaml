---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 15m
  chart:
    spec:
      chart: authentik
      version: 2022.6.3
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 15m
  dependsOn:
    - name: postgres
      namespace: dbms
  values:
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2022.7.2

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN_NAME}"
        traefik.ingress.kubernetes.io/router.middlewares: "traefik-system-cloudflare-only@kubernetescrd"
        external-dns/is-public: "true"
      hosts:
        - host: &host auth.${SECRET_DOMAIN_NAME}
          paths:
            - path: /

    geoip:
      enabled: true

    envValueFrom:
      AUTHENTIK_EMAIL__HOST:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_EMAIL__HOST
      AUTHENTIK_EMAIL__PORT:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_EMAIL__PORT
      AUTHENTIK_EMAIL__USERNAME:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_EMAIL__USERNAME
      AUTHENTIK_EMAIL__PASSWORD:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_EMAIL__PASSWORD
      AUTHENTIK_EMAIL__USE_TLS:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_EMAIL__USE_TLS
      AUTHENTIK_EMAIL__FROM:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_EMAIL__FROM
      AUTHENTIK_SECRET_KEY:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_SECRET_KEY
      AUTHENTIK_POSTGRESQL__HOST:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_POSTGRESQL__HOST
      AUTHENTIK_POSTGRESQL__NAME:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_POSTGRESQL__NAME
      AUTHENTIK_POSTGRESQL__USER:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_POSTGRESQL__USER
      AUTHENTIK_POSTGRESQL__PASSWORD:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_POSTGRESQL__PASSWORD
      AUTHENTIK_REDIS__HOST:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_REDIS__HOST
      AUTHENTIK_REDIS__CACHE_DB:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_REDIS__CACHE_DB
      AUTHENTIK_REDIS__MESSAGE_QUEUE_DB:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_REDIS__MESSAGE_QUEUE_DB
      AUTHENTIK_REDIS__WS_DB:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_REDIS__WS_DB
      AUTHENTIK_REDIS__OUTPUT_SESSION_DB:
        secretKeyRef:
          name: authentik-secrets
          key: AUTHENTIK_REDIS__OUTPUT_SESSION_DB

    authentik:
      log_level: debug
      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

    postgresql:
      enabled: false
    redis:
      enabled: false

    prometheus:
      rules:
        create: true
      serviceMonitor:
        create: true

  valuesFrom:
    - kind: Secret
      name: authentik-secrets
      valuesKey: AUTHENTIK_GEOIP_ACCOUNT_ID
      targetPath: geoip.accountId
      optional: false
    - kind: Secret
      name: authentik-secrets
      valuesKey: AUTHENTIK_GEOIP_LICENSE_KEY
      targetPath: geoip.licenseKey
      optional: false
