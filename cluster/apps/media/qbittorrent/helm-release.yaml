---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  values:
    image:
      repository: ghcr.io/onedr0p/qbittorrent
      tag: 4.4.3.1
    env:
      TZ: ${CONFIG_TIMEZONE}
      QBITTORRENT__PORT: &port 8080
      QBITTORRENT__BT_PORT: &port-bt 50413
    service:
      main:
        ports:
          http:
            port: *port
      bittorrent:
        enabled: true
        type: LoadBalancer
        annotations:
          metallb.universe.tf/loadBalancerIPs: ${CONFIG_SVC_QBITTORRENT_ADDR}
          prometheus.io/probe: "true"
          prometheus.io/protocol: tcp
        ports:
          bittorrent:
            enabled: true
            name: bittorrent
            port: *port-bt
            protocol: TCP
            targetPort: 6881
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "traefik-system-internal@kubernetescrd"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN_NAME}"
            paths:
              - path: /
                pathType: Prefix
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 1001
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config
      downloads:
        enabled: true
        existingClaim: downloads
        mountMath: "/downloads"
    metrics:
      enabled: true
      exporter:
        image:
          repository: ghcr.io/k8s-at-home/prometheus-qbittorrent-exporter
          tag: v1.2.0
      serviceMonitor:
        interval: 1m
        scrapeTimeout: 10s
      prometheusRule:
        enabled: true
