---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: intel-gpu-plugin
      namespace: kube-system
    - name: node-feature-discovery
      namespace: kube-system
  values:
    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.29.1.6316-f4cdfea9c@sha256:b9a570cb67d22f73d1fbdc1f3e781b901718f829176ccffa183646e8bf7e3c8b
    env:
      TZ: "${CONFIG_TIMEZONE}"
      ADVERTISE_IP: "http://${CONFIG_SVC_PLEX_ADDR}:32400,https://{{ .Release.Name }}.${SECRET_DOMAIN_NAME}:443"
      ALLOWED_NETWORKS: "10.0.0.0/8"
      HOSTNAME: "plex"
    envFrom:
      - secretRef:
          name: *app
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        externalIPs: ["${CONFIG_SVC_PLEX_ADDR}"]
        annotations:
          metallb.universe.tf/loadBalancerIPs: ${CONFIG_SVC_PLEX_ADDR}
        ports:
          http:
            port: 32400
            protocol: TCP
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "traefik-system-internal@kubernetescrd"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN_NAME}"
            paths:
              - path: /
                pathType: Prefix
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 44
        - 109
        - 100
    persistence:
      config:
        enabled: true
        existingClaim: plex-config
      media:
        enabled: true
        type: nfs
        server: "${SECRET_ATLAS_NFS_SERVER}"
        path: /mnt/atlas/media/
        mountPath: /data
        readOnly: true
      backup:
        enabled: true
        type: nfs
        server: "${SECRET_ATLAS_NFS_SERVER}"
        path: "${SECRET_ATLAS_NFS_ROOTDIR}/backup/media/plex"
        mountPath: /backup
      transcode:
        enabled: true
        type: emptyDir
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-intel-gpu
                  operator: In
                  values:
                    - "true"
    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 100m
        memory: 2Gi
      limits:
        gpu.intel.com/i915: 1
        memory: 10Gi
