---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Image Pull

on:
  pull_request:
    branches: ["main"]
    paths:
      - "kubernetes/main/**"
      - "kubernetes/repositories/**"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  filter:
    name: Image Pull - Filter
    runs-on: ubuntu-latest
    outputs:
      changed-files: ${{ steps.changed-files.outputs.changed_files }}
    steps:
      - name: Get Changed Files
        id: changed-files
        uses: bjw-s-labs/action-changed-files@b1144fc772fca235a50902c7bb6cc431cc7d8e27 # v0.3.2
        with:
          patterns: kubernetes/main/**/*

  extract:
    if: ${{ needs.filter.outputs.changed-files != '[]' }}
    name: Image Pull - Extract Images
    needs: filter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ["default", "pull"]
      fail-fast: false
    outputs:
      default: ${{ steps.extract.outputs.default }}
      pull: ${{ steps.extract.outputs.pull }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: "${{ matrix.branch == 'default' && github.event.repository.default_branch || '' }}"

      - name: Gather Images
        uses: docker://ghcr.io/allenporter/flux-local:v7.3.0@sha256:81870d4e24a3691e0ef9a258505100b194e550e1f8ffeb5e696fdbaab1913429
        with:
          args: >-
            get cluster
            --all-namespaces
            --path /github/workspace/kubernetes/main/cluster/config
            --enable-images
            --only-images
            --output json
            --output-file images.json

      - name: Extract Images
        id: extract
        run: |
          echo "${{ matrix.branch }}=$(jq --compact-output '.' images.json)" >> "${GITHUB_OUTPUT}"

          {
            echo '## Branch ${{ matrix.branch }} images'
            echo '```json'
            jq '.' images.json
            echo '```'
          } >> "${GITHUB_STEP_SUMMARY}"

  diff:
    if: ${{ needs.extract.outputs.default != needs.extract.outputs.pull }}
    name: Image Pull - Diff Images
    runs-on: ubuntu-latest
    needs: extract
    outputs:
      images: ${{ steps.diff.outputs.images }}
    steps:
      - name: Diff Images
        id: diff
        run: |
          images=$(jq --compact-output --null-input \
              --argjson f1 '${{ needs.extract.outputs.default }}' \
              --argjson f2 '${{ needs.extract.outputs.pull }}' \
              '$f2 - $f1' \
          )
          echo "images=${images}" >> "${GITHUB_OUTPUT}"

          {
            echo '## New images to Pull'
            echo '```json'
            echo "${images}" | jq
            echo '```'
          } >> "${GITHUB_STEP_SUMMARY}"

  pull:
    if: ${{ needs.diff.outputs.images != '[]' }}
    name: Image Pull - Pull Images
    runs-on: k8s-homelab-runner
    needs: diff
    strategy:
      matrix:
        image: ${{ fromJSON(needs.diff.outputs.images) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Install talosctl
        run: curl -fsSL https://talos.dev/install | sh

      - name: Pull Image
        run: talosctl -n "${NODE_IP}" image pull ${{ matrix.image }}

  status:
    if: ${{ always() }}
    name: Image Pull - Success
    needs: pull
    runs-on: ubuntu-latest
    steps:
      - name: Any jobs failed?
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: All jobs passed or skipped?
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: echo "All jobs passed or skipped" && echo "${{ toJSON(needs.*.result) }}"
