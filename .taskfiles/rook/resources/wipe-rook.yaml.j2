---
apiVersion: batch/v1
kind: Job
metadata:
  name: &app wipe-rook-{{ ENV.NODE }}
  namespace: default
  labels:
    app.kubernetes.io/name: *app
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *app
    spec:
      restartPolicy: Never
      nodeName: {{ ENV.NODE }}
      initContainers:
        - name: data
          image: docker.io/library/alpine:latest
          command:
            - /bin/sh
            - -c
          args:
            - rm -rf /mnt/host_var/lib/rook
          volumeMounts:
            - mountPath: /mnt/host_var
              name: host-var
          securityContext:
            privileged: true
          resources: {}
      containers:
        - name: disk
          image: docker.io/library/alpine:latest
          command:
            - /bin/sh
            - -c
          args:
            - |
              apk add --no-cache findutils nvme-cli;
              DISK={{ ENV.DISK }};
              nvme id-ns -H $DISK
              echo "=== Wiping $DISK ===";
              nvme format --lbaf=0 $DISK --force;
              nvme format --block-size=512 $DISK --force;
          securityContext:
            privileged: true
          volumeMounts:
            - name: host-dev
              mountPath: /dev
          resources: {}
      volumes:
        - name: host-var
          hostPath:
            path: /var
        - name: host-dev
          hostPath:
            path: /dev
            type: Directory
      topologySpreadConstraints:
        - maxSkew: 1
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
