---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  ROOK_TASK_RESOURCES_DIR: "{{.ROOT_DIR}}/.taskfiles/Rook/resources"

tasks:
  wipe-disk:
    desc: Wipe all remnants of rook-ceph from a given disk  [cluster={{.cluster}}] [NODE=required] [DISK=required]
    preconditions:
      - which kubectl minijinja-cli stern
      - test -f {{.ROOK_TASK_RESOURCES_DIR}}/wipe-rook.yaml.j2
      - kubectl --context {{.cluster}} wait nodes -l kubernetes.io/hostname={{.NODE}} --timeout 0 --for condition=Ready
    requires:
      vars:
        - cluster
        - NODE
        - DISK
    env:
      NODE: "{{ .NODE }}"
      DISK: "{{ .DISK }}"
    cmds:
      - minijinja-cli {{.ROOK_TASK_RESOURCES_DIR}}/wipe-rook.yaml.j2  | kubectl --context {{.cluster}} apply --server-side --filename -
      - until kubectl --context {{.cluster}} --namespace default get job/wipe-rook-{{ .NODE }} &>/dev/null; do sleep 5; done
      - kubectl --context {{.cluster}} --namespace default wait job/wipe-rook-{{ .NODE }} --for=condition=complete --timeout=5m
      - stern --context {{.cluster}} --namespace default job/wipe-rook-{{ .NODE }} --no-follow
      - kubectl --context {{.cluster}} --namespace default delete job wipe-rook-{{ .NODE }}

  toolbox:
    desc: Exec into the Rook Ceph toolbox
    interactive: true
    requires:
      vars:
        - cluster
    cmds:
      - kubectl --context {{.cluster}} --namespace rook-ceph exec -it $(kubectl --context {{.cluster}} --namespace rook-ceph get pod -l "app=rook-ceph-tools" -o jsonpath='{.items[0].metadata.name}') -- bash
