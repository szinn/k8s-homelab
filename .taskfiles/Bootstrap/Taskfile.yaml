---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  main:
    desc: "Bootstrap main cluster"
    vars:
      cluster: main
    cmds:
      - task: :talos:bootstrap
        vars:
          cluster: main
          nodes: k8s-1 k8s-2 k8s-3 k8s-4 k8s-5 k8s-6

  staging:
    desc: "Bootstrap staging cluster"
    cmds:
      - task: :proxmox:reset-staging
      - task: :talos:bootstrap
        vars:
          cluster: staging
          nodes: stage-1 stage-2 stage-3 stage-4 stage-5 stage-6
      - task: :proxmox:unmount-staging-cdrom

  nas:
    desc: "Bootstrap nas cluster"
    vars:
      cluster: nas
    cmds:
      - echo "Not implemented yet"

  config:
    desc: Rebuild all cluster configuration
    cmd: bash .taskfiles/Bootstrap/_scripts/build-config.sh

  deploy:
    desc: Deploy a cluster
    cmd: bash .taskfiles/Bootstrap/_scripts/deploy-cluster.sh {{.cluster}}
    requires:
      vars:
        - cluster

  get-certs:
    desc: Fetch certificates from cluster
    cmds:
      - for: { var: certs, split: ' ' }
        cmd: kubectl --context {{.cluster}} get secrets -n networking {{.ITEM}}-tls -o yaml | grep -v "creationTimestamp:" | grep -v "resourceVersion:" | grep -v " uid:" > kubernetes/{{.cluster}}/apps/{{.ITEM}}-tls.yaml
    requires:
      vars:
        - cluster
    vars:
      certs:
        sh: 'echo {{if eq .cluster "main"}} "tech-wildcard wildcard" {{else}} "wildcard" {{end}}'

  put-certs:
    desc: Upload certificates to cluster
    cmds:
      - for: { var: certs, split: ' ' }
        cmd: kubectl --context {{.cluster}} apply -f kubernetes/{{.cluster}}/apps/{{.ITEM}}-tls.yaml
    requires:
      vars:
        - cluster
    vars:
      certs:
        sh: 'echo {{if eq .cluster "main"}} "tech-wildcard wildcard" {{else}} "wildcard" {{end}}'
