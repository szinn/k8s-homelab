---
version: "3"

vars:
  MACHINE_ROOT_DIR: "{{.ROOT_DIR}}/.taskfiles/Machine"
  FILES_DIR: "{{.MACHINE_ROOT_DIR}}/files"
  SCRIPTS_DIR: "{{.MACHINE_ROOT_DIR}}/scripts"
  # renovate: depName=AdguardTeam/AdGuardHome datasource=github-releases
  ADGUARD_VERSION: v0.107.57

tasks:
  fetch-certificate:
    desc: Fetch domain certificate from cluster
    cmd: "{{.SCRIPTS_DIR}}/fetch-certificate.sh {{.FILES_DIR}}/certificates"

  update-octopi-certificate:
    desc: Update OctoPi certificate
    cmds:
      - scp "{{.FILES_DIR}}/certificates/certificate.pem" root@octopi.zinn.tech:/etc/ssl/snakeoil.pem
      - ssh root@octopi.zinn.tech systemctl restart haproxy
      - ssh root@octopi.zinn.tech chmod u+rw,g-rwx,o-rwx /etc/ssl/snakeoil.pem

  update-pikvm-certificate:
    desc: Update PiKVM certificate
    cmds:
      - ssh root@pikvm.zinn.tech rw
      - scp "{{.FILES_DIR}}/certificates/certificate.crt" root@pikvm.zinn.tech:/etc/kvmd/nginx/ssl/server.crt
      - ssh root@pikvm.zinn.tech chmod u+rw,g-wx,o-wx /etc/kvmd/nginx/ssl/server.crt
      - scp "{{.FILES_DIR}}/certificates/certificate.key" root@pikvm.zinn.tech:/etc/kvmd/nginx/ssl/server.key
      - ssh root@pikvm.zinn.tech chmod u+rw,g-wx,o-wx /etc/kvmd/nginx/ssl/server.key
      - ssh root@pikvm.zinn.tech ro
      - ssh root@pikvm.zinn.tech systemctl restart kvmd-nginx

  update-pikvm-configuration:
    desc: Update PiKVM configuration
    cmds:
      - ssh root@pikvm.zinn.tech rw
      - scp "{{.FILES_DIR}}/pikvm/override.yaml" root@pikvm.zinn.tech:/etc/kvmd/override.yaml
      - ssh root@pikvm.zinn.tech ro
      - ssh root@pikvm.zinn.tech systemctl restart kvmd

  update-proxmox-certificate:
    desc: Update Proxmox certificate
    cmds:
      - scp "{{.FILES_DIR}}/certificates/certificate.crt" root@ares.zinn.tech:/etc/pve/nodes/ares/pve-ssl.pem
      - ssh root@ares.zinn.tech chown root:www-data /etc/pve/nodes/ares/pve-ssl.pem
      - ssh root@ares.zinn.tech chmod u+rw,g-wx,o-wx /etc/pve/nodes/ares/pve-ssl.pem
      - scp "{{.FILES_DIR}}/certificates/certificate.key" root@ares.zinn.tech:/etc/pve/nodes/ares/pve-ssl.key
      - ssh root@ares.zinn.tech chown root:www-data /etc/pve/nodes/ares/pve-ssl.key
      - ssh root@ares.zinn.tech chmod u+rw,g-wx,o-wx /etc/pve/nodes/ares/pve-ssl.key
      - ssh root@ares.zinn.tech systemctl restart pveproxy

  update-ragnar-certificate:
    desc: Update Ragnar certificate
    cmds:
      - scp "{{.FILES_DIR}}/certificates/certificate.crt" root@ragnar.zinn.tech:/etc/certificates/ZinnTech.crt
      - ssh root@ragnar.zinn.tech chmod u+rw,g-wx,o-wx /etc/certificates/ZinnTech.crt
      - scp "{{.FILES_DIR}}/certificates/certificate.key" root@ragnar.zinn.tech:/etc/certificates/ZinnTech.key
      - ssh root@ragnar.zinn.tech chmod u+rw,g-wx,o-wx /etc/certificates/ZinnTech.key
      - ssh root@ragnar.zinn.tech /mnt/atlas/support/update-certificate.sh

  update-ragnar-configuration:
    desc: Update Ragnar configuration
    cmds:
      - scp "{{.FILES_DIR}}/ragnar/0-ntp-allow.conf" root@ragnar.zinn.tech:/etc/chrony/conf.d/0-ntp-allow.conf
      - ssh root@ragnar.zinn.tech chmod u+rw,g-wx,o-wx /etc/chrony/conf.d/0-ntp-allow.conf
      - ssh root@ragnar.zinn.tech systemctl restart chrony

  update-styx-certificate:
    desc: Update Styx certificate
    cmds:
      - task: update-unifi-certificate
        vars:
          MACHINE: styx

  update-zeus-certificate:
    desc: Update Zeus certificate
    cmds:
      - task: update-unifi-certificate
        vars:
          MACHINE: zeus

  update-unifi-certificate:
    desc: Update UniFi certificate
    requires:
      vars:
        - MACHINE
    cmds:
      - scp "{{.FILES_DIR}}/certificates/certificate.crt" root@{{.MACHINE}}.zinn.tech:/data/unifi-core/config/unifi-core.crt
      - ssh root@{{.MACHINE}}.zinn.tech chmod u+rw,g-wx,o-wx /data/unifi-core/config/unifi-core.crt
      - scp "{{.FILES_DIR}}/certificates/certificate.key" root@{{.MACHINE}}.zinn.tech:/data/unifi-core/config/unifi-core.key
      - ssh root@{{.MACHINE}}.zinn.tech chmod u+rw,g-wx,o-wx /data/unifi-core/config/unifi-core.key
      - ssh root@{{.MACHINE}}.zinn.tech systemctl restart unifi-core

  update-artemis-certificate:
    desc: Update Artemis certificate
    cmds:
      - ssh root@artemis.zinn.tech mkdir -p /opt/gatus
      - scp "{{.FILES_DIR}}/certificates/certificate.crt" root@artemis.zinn.tech:/opt/gatus/certificate.crt
      - ssh root@artemis.zinn.tech chmod u+rw,g-wx,o-wx /opt/gatus/certificate.crt
      - scp "{{.FILES_DIR}}/certificates/certificate.key" root@artemis.zinn.tech:/opt/gatus/certificate.key
      - ssh root@artemis.zinn.tech chmod u+rw,g-wx,o-wx /opt/gatus/certificate.key
      - ssh root@artemis.zinn.tech systemctl restart gatus

  update-linux-packages:
    desc: Update linux machines
    cmds:
      - ssh root@artemis.zinn.tech 'apt update -y && apt upgrade -y && apt autoremove'
      - ssh root@hera.zinn.tech 'dnf upgrade -y'
      - ssh root@titan.zinn.tech 'dnf upgrade -y'

  install-artemis-adguard:
    desc: Install Artemis AdGuardHome
    vars:
      # renovate: depName=AdguardTeam/AdGuardHome datasource=github-releases
      ADGUARD_VERSION: v0.107.57
    cmds:
      - ssh root@artemis.zinn.tech wget -q https://github.com/AdguardTeam/AdGuardHome/releases/download/{{.ADGUARD_VERSION}}/AdGuardHome_linux_arm64.tar.gz -O /opt/AdGuardHome_linux_arm64.tar.gz
      - ssh root@artemis.zinn.tech 'cd /opt && tar xf AdGuardHome_linux_arm64.tar.gz'
      - ssh root@artemis.zinn.tech 'cd /opt/AdGuardHome && ./AdGuardHome -s install'

  install-artemis-docker:
    desc: Install docker
    cmds:
      - ssh root@artemis.zinn.tech  'apt update -y && apt upgrade -y'
      - ssh root@artemis.zinn.tech 'curl -fsSL https://get.docker.com -o /opt/get-docker.sh && sh /opt/get-docker.sh && rm /opt/get-docker.sh'
      - ssh root@artemis.zinn.tech apt install -y docker-compose
      - ssh root@artemis.zinn.tech systemctl restart docker.service

  install-artemis-ddns:
    desc: Install Cloudflare DDNS
    cmds:
      - op inject --in-file "{{.FILES_DIR}}/artemis/cloudflare-ddns.sh" 2>/dev/null > /tmp/cloudflare-ddns.sh
      - scp /tmp/cloudflare-ddns.sh root@artemis.zinn.tech:/usr/local/bin/cloudflare-ddns.sh
      - rm /tmp/cloudflare-ddns.sh
      - ssh root@artemis.zinn.tech 'chmod +x /usr/local/bin/cloudflare-ddns.sh && chmod og+rx /usr/local/bin/cloudflare-ddns.sh'
      - scp "{{.FILES_DIR}}/artemis/cloudflare-ddns.crontab" root@artemis.zinn.tech:/etc/cron.d/cloudflare-ddns
      - ssh root@artemis.zinn.tech chmod -x /etc/cron.d/cloudflare-ddns

  update-artemis-configuration:
    desc: Update Artemis configuration
    cmds:
      - task: update-artemis-adguard-configuration
        vars:
          machine_ip: 10.0.0.8
      - task: update-artemis-gatus-configuration

  update-artemis-adguard-configuration:
    desc: Update Artemis AdGuardHome configuration
    requires:
      vars:
        - machine_ip
    cmds:
      - cat "{{.FILES_DIR}}/adguard/AdGuardHome.yaml" | sed -e "s/MACHINE_IP/{{.machine_ip}}/" > /tmp/AdGuardHome.yaml
      - scp /tmp/AdGuardHome.yaml root@artemis.zinn.tech:/opt/AdGuardHome/AdGuardHome.yaml
      - rm /tmp/AdGuardHome.yaml
      - ssh root@artemis.zinn.tech chmod og-rwx /opt/AdGuardHome/AdGuardHome.yaml
      - ssh root@artemis.zinn.tech systemctl restart AdGuardHome

  restart-artemis-adguard:
    desc: Restart Artemis AdGuardHome
    cmds:
      - ssh root@artemis.zinn.tech systemctl restart AdGuardHome

  update-artemis-gatus-configuration:
    desc: Update Artemis AdGuardHome configuration
    cmds:
      - ssh root@artemis.zinn.tech mkdir -p /opt/gatus
      - op inject --in-file "{{.FILES_DIR}}/artemis/gatus-config.yaml" 2>/dev/null > /tmp/gatus.yaml
      - scp /tmp/gatus.yaml root@artemis.zinn.tech:/opt/gatus/gatus.yaml
      - scp "{{.FILES_DIR}}/artemis/gatus-docker-compose.yaml" root@artemis.zinn.tech:/opt/gatus/docker-compose.yaml
      - scp "{{.FILES_DIR}}/artemis/gatus-environment" root@artemis.zinn.tech:/opt/gatus/.env
      - scp "{{.FILES_DIR}}/artemis/gatus.service" root@artemis.zinn.tech:/etc/systemd/system/gatus.service
      - task: update-artemis-certificate

  install-titan-adguard:
    desc: Install Titan AdGuardHome
    vars:
      # renovate: depName=AdguardTeam/AdGuardHome datasource=github-releases
      ADGUARD_VERSION: v0.107.57
    cmds:
      - ssh root@titan.zinn.tech wget -q https://github.com/AdguardTeam/AdGuardHome/releases/download/{{.ADGUARD_VERSION}}/AdGuardHome_linux_amd64.tar.gz -O /opt/AdGuardHome_linux_amd64.tar.gz
      - ssh root@titan.zinn.tech 'cd /opt && tar xf AdGuardHome_linux_amd64.tar.gz'
      - ssh root@titan.zinn.tech 'cd /opt/AdGuardHome && ./AdGuardHome -s install'

  restart-titan-adguard:
    desc: Restart Titan AdGuardHome
    cmds:
      - ssh root@titan.zinn.tech systemctl restart AdGuardHome

  update-titan-adguard-configuration:
    desc: Update Titan AdGuardHome configuration
    requires:
      vars:
        - machine_ip
    cmds:
      - cat "{{.FILES_DIR}}/adguard/AdGuardHome.yaml" | sed -e "s/MACHINE_IP/{{.machine_ip}}/" > /tmp/AdGuardHome.yaml
      - scp /tmp/AdGuardHome.yaml root@titan.zinn.tech:/opt/AdGuardHome/AdGuardHome.yaml
      - rm /tmp/AdGuardHome.yaml
      - ssh root@titan.zinn.tech chmod og-rwx /opt/AdGuardHome/AdGuardHome.yaml
      - ssh root@titan.zinn.tech systemctl restart AdGuardHome

  install-hera-configuration:
    desc: Install Hera configuration
    vars:
      # renovate: depName=ryanoasis/nerd-fonts datasource=github-releases
      FONT_VERSION: v3.3.0
    cmds:
      - ssh scotte@hera.zinn.tech curl -o /tmp/FiraCode.zip -L https://github.com/ryanoasis/nerd-fonts/releases/download/{{.FONT_VERSION}}/FiraCode.zip
      - ssh scotte@hera.zinn.tech unzip -o /tmp/FiraCode.zip -d /home/scotte/.local/share/fonts
      - ssh scotte@hera.zinn.tech fc-cache -vf /home/scotte/.local/share/fonts
